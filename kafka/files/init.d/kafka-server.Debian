#!/bin/sh
#
# /etc/init.d/kafka-server -- startup script for the kafka distributed publish-subscribe messaging system
#
### BEGIN INIT INFO
# Provides:          kafka
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start kafka
# Description:       Start the kafka distributed publish-subscribe messaging system
### END INIT INFO
set -e
PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME="$(basename "$0" | sed 's/^[KS][0-9]\{2\}//')"
DESC="kafka-broker"
DEFAULT=/etc/default/$NAME
if [ `id -u` -ne 0 ]; then
   echo "You need root privileges to run this script"
   exit 1
fi
# Make sure kafka is started with system locale
if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG
fi
. /lib/lsb/init-functions
if [ -r /etc/default/rcS ]; then
  . /etc/default/rcS
fi

# The following variables can be overwritten in $DEFAULT
# Run kafka as this user ID and group ID
KAFKA_USER=kafka
KAFKA_GROUP=kafka
KAFKA_START=yes

# End of variables that can be overwritten in $DEFAULT
# overwrite settings from default file
if [ -r "$DEFAULT" ]; then
  . "$DEFAULT"
fi
KAFKA_PID="/var/run/$NAME.pid"
kafka_sh() {
  # Escape any double quotes in the value of JAVA_OPTS
  JAVA_OPTS="$(echo $JAVA_OPTS | sed 's/\"/\\\"/g')"
  JMX_PORT=${KAFKA_JMX_PORT:-9999}
  KAFKA_JMX_OPTS="$KAFKA_JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT"
  if [ ! -d ${KAFKA_LOG_DIR} ]; then
    mkdir -p ${KAFKA_LOG_DIR}
    chown $KAFKA_USER:$KAFKA_GROUP ${KAFKA_LOG_DIR}
  fi
  # Run as a daemon
  set +e
  su $KAFKA_USER -c "nohup $KAFKA_HOME/bin/kafka-server-start.sh $KAFKA_CONF/server.properties > ${KAFKA_LOG_DIR}/server.out 2> ${KAFKA_LOG_DIR}/server.err &"
  status="$?"
  set +a -e
  return $status
}
case "$1" in
  start)
    # Check for java
    if [ -z "$JAVA_HOME" ]; then
      log_warning_msg "cannot find java binary set JAVA_HOME"
      exit 1
    else
      JAVA="$JAVA_HOME/bin/java"
    fi
    export JAVA_HOME
    if [ -n "$KAFKA_START" -a "$KAFKA_START" != "yes" ]; then
       log_failure_msg "KAFKA_START not set to 'yes' in $DEFAULT, not starting"
       exit 0
    fi
    log_daemon_msg "Starting $DESC" "$NAME"
    if start-stop-daemon --test --start --pidfile "$KAFKA_PID" \
      --user $KAFKA_USER --exec "$JAVA_HOME/bin/java" \
      >/dev/null; then
      kafka_sh start
      sleep 5
      if start-stop-daemon --test --start --pidfile "$KAFKA_PID" \
        --user $KAFKA_USER --exec "$JAVA_HOME/bin/java" \
        >/dev/null; then
        if [ -f "$KAFKA_PID" ]; then
          rm -f "$KAFKA_PID"
        fi
        log_end_msg 1
      else
        log_end_msg 0
      fi
    else
      log_progress_msg "(already running)"
      log_end_msg 0
    fi
   ;;
  stop)
   log_daemon_msg "Stopping $DESC" "$NAME"
   set +e
   if [ -f "$KAFKA_PID" ]; then
       start-stop-daemon --stop --pidfile "$KAFKA_PID" \
           --user "$KAFKA_USER" \
           --retry=TERM/20/KILL/5 >/dev/null
       if [ $? -eq 1 ]; then
           log_progress_msg "$DESC is not running but pid file exists, cleaning up"
       elif [ $? -eq 3 ]; then
           PID="`cat $KAFKA_PID`"
           log_failure_msg "Failed to stop $NAME (pid $PID)"
           exit 1
       fi
       rm -f "$KAFKA_PID"
   else
       log_progress_msg "(not running)"
   fi
   log_end_msg 0
   set -e
   ;;
   status)
   set +e
   start-stop-daemon --test --start --pidfile "$KAFKA_PID" \
       --user $KAFKA_USER --exec "$JAVA_HOME/bin/java" \
       >/dev/null 2>&1
   if [ "$?" = "0" ]; then
       if [ -f "$KAFKA_PID" ]; then
           log_success_msg "$DESC is not running, but pid file exists."
           exit 1
       else
           log_success_msg "$DESC is not running."
           exit 3
       fi
   else
       log_success_msg "$DESC is running with pid `cat $KAFKA_PID`"
   fi
   set -e
        ;;
  restart|force-reload)
   if [ -f "$KAFKA_PID" ]; then
       $0 stop
       sleep 1
   fi
   $0 start
   ;;
  try-restart)
        if start-stop-daemon --test --start --pidfile "$KAFKA_PID" \
       --user $KAFKA_USER --exec "$JAVA_HOME/bin/java" \
       >/dev/null; then
       $0 start
   fi
        ;;
  *)
   log_success_msg "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
   exit 1
   ;;
esac
exit 0